F_comparison <- tibble(type = rep(c("analytic","simulated"), each = 1000),
F_value = c(rf(1000,3,16),save_F_values))
ggplot(F_comparison, aes(x=F_value))+
geom_histogram()+
facet_wrap(~type)
F_value = c(rf(1000,levels-1,(levels*n_per_level),save_F_values))
save_F_values <- length(1000)
for(i in 1:1000){
random_data <- tibble(subjects = 1:(levels*n_per_level),
IV = as.factor(rep(1:levels, each = n_per_level)),
DV = rnorm(levels*n_per_level, 0, 1)
)
aov.out <- aov(DV ~ IV, data = random_data)
simulated_F <- summary(aov.out)[[1]]$`F value`[1]
save_F_values[i] <- simulated_F
}
library(ggplot2)
F_comparison <- tibble(type = rep(c("analytic","simulated"), each = 1000),                   F_value=c(rf(1000,levels-1,(levels*n_per_level),save_F_values))
ggplot(F_comparison, aes(x=F_value))+
save_F_values <- length(1000)
for(i in 1:1000){
random_data <- tibble(subjects = 1:(levels*n_per_level),
IV = as.factor(rep(1:levels, each = n_per_level)),
DV = rnorm(levels*n_per_level, 0, 1)
)
aov.out <- aov(DV ~ IV, data = random_data)
simulated_F <- summary(aov.out)[[1]]$`F value`[1]
save_F_values[i] <- simulated_F
}
library(ggplot2)
F_comparison <- tibble(type = rep(c("analytic","simulated"), each = 1000),
F_value=c(rf(1000,levels-1,(levels*n_per_level)-levels),save_F_values))
ggplot(F_comparison, aes(x=F_value, color=type))+
geom_histogram()+
facet_wrap(~type)
save_F_values <- length(1000)
for(i in 1:1000){
random_data <- tibble(subjects = 1:(levels*n_per_level),
IV = as.factor(rep(1:levels, each = n_per_level)),
DV = rnorm(levels*n_per_level, 0, 1)
)
aov.out <- aov(DV ~ IV, data = random_data)
simulated_F <- summary(aov.out)[[1]]$`F value`[1]
save_F_values[i] <- simulated_F
}
library(ggplot2)
F_comparison <- tibble(type = rep(c("analytic","simulated"), each = 1000),
F_value=c(rf(1000,levels-1,(levels*n_per_level)-levels),save_F_values))
ggplot(F_comparison, aes(x=F_value, color=type))+
geom_freqpoly(bins=50)
save_F_values <- length(1000)
for(i in 1:1000){
random_data <- tibble(subjects = 1:(levels*n_per_level),
IV = as.factor(rep(1:levels, each = n_per_level)),
DV = rnorm(levels*n_per_level, 1)
)
aov.out <- aov(DV ~ IV, data = random_data)
simulated_F <- summary(aov.out)[[1]]$`F value`[1]
save_F_values[i] <- simulated_F
}
library(ggplot2)
F_comparison <- tibble(type = rep(c("analytic","simulated_exp"), each = 1000),
F_value=c(rf(1000,levels-1,(levels*n_per_level)-levels),save_F_values))
ggplot(F_comparison, aes(x=F_value, color=type))+
geom_freqpoly(bins=50)
F_comparison <- tibble(type = rep(c("analytic","simulated_t1"), each = 1000),
F_value=c(rf(1000,levels-1,(levels*n_per_level)-levels),save_F_values))
ggplot(F_comparison, aes(x=F_value, color=type))+
geom_freqpoly(bins=50)
knitr::opts_chunk$set(echo = TRUE)
rbinom(20, 1, .05)
rbinom(20, 1, .05)
rbinom(20, 1, .05)
replicate(10000,rbinom(20, 1, .05))
A <- replicate(10000,(rbinom(20, 1, .05)))
hist(A)
hist(A)
A <- replicate(10000,(rbinom(20, 1, .05)))
hist(A)
A <- replicate(10000,sum(rbinom(20, 1, .05)))
hist(A)
length(A[A > 0])/10000
hist(B)
B <- replicate(10000,sum(rbinom(20, 1, .05)))
hist(B)
length(B[B] > 0])/10000
length(B[B > 0])/10000
B <- replicate(10000,sum(rbinom(50, 1, .05)))
hist(B)
length(B[B > 0])/10000
rbinom(20, 3, .05)
replicate(10000,sum(rbinom(20, 3, .05)))
D <- replicate(10000,sum(rbinom(20, 3, .05)))
length(D[D > 0])/10000
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
t.test(DV~IV, var.equal=TRUE, data = sim_data)
t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
library(tibble)
my_pvalues <- c()
for(i in 1:100){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my.pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
my_pvalues <- c()
library(tibble)
my_pvalues <- c()
for(i in 1:100){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my.pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
library(tibble)
my_pvalues <- c()
for(i in 1:100){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my_pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
hist(my_pvalues)
hist(my_pvalues)
library(tibble)
my_pvalues <- c()
for(i in 1:100){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my_pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
hist(my_pvalues)
hist(my_pvalues)
hist.default(my_pvalues)
library(tibble)
my_pvalues <- c()
for(i in 1:10000){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my_pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
hist(my_pvalues)
my_pvalues_n <-as.numeric(my_pvalues)
hist(my_pvalues_n)
library(tibble)
my_pvalues <- c()
for(i in 1:10000){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my_pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p_value
}
my_pvalues_n <-as.numeric(my_pvalues)
hist(my_pvalues_n)
library(tibble)
my_pvalues <- c()
for(i in 1:10000){
IV <- rep(1:2,each=20)
DV <- c(rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
my_pvalues[i] <- t.test(DV~IV, var.equal=TRUE, data = sim_data)$p.value
}
my_pvalues_n <- as.numeric(my_pvalues)
hist(my_pvalues_n)
my_pvalues <- replicate(10000,t.test(rnorm(20,0,1),rnorm(20,0,1), var.equal = TRUE)$p.value)
my_pvalues <- replicate(10000,t.test(rnorm(20,0,1),rnorm(20,0,1), var.equal = TRUE)$p.value)
hist(my_pvalues)
my_pvalues <- replicate(10000,t.test(rnorm(20,0.5,1),rnorm(20,0,1), var.equal = TRUE)$p.value)
hist(my_pvalues)
my_pvalues <- c()
for(i in 1:10){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0.5,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
View(sim_data)
View(sim_data)
View(sim_data)
my_pvalues <- c()
for(i in 1:10){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0.5,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
aov.out <- aov(DV~IVm sim_data)
my_pvalues <- c()
for(i in 1:10){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0.5,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
aov.out <- aov(DV~IV, sim_data)
summary(aov.out)
c1 <- c(3, -1, -1, -1)
contrasts(sim_data$IV)
aov.out <- aov(DV~IV, sim_data)
summary(aov.out)
summary.aov(aov.out, split = list(IV=list("c1" = 1)))
save_results <- summary.aov(aov.out, split = list(IV=list("c1" = 1)))
my_pvalues <- c()
for(i in 1:10){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0.5,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
c1 <- c(3, -1, -1, -1)
contrasts(sim_data$IV)
aov.out <- aov(DV~IV, sim_data)
save_results <- summary.aov(aov.out, split = list(IV=list("c1" = 1)))
my_pvalues[i] <- save_results[[1]]$`Pr(>F)`[2]
}
hist(my_pvalues)
my_pvalues <- c()
for(i in 1:1000){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0.5,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
c1 <- c(3, -1, -1, -1)
contrasts(sim_data$IV)
aov.out <- aov(DV~IV, sim_data)
save_results <- summary.aov(aov.out, split = list(IV=list("c1" = 1)))
my_pvalues[i] <- save_results[[1]]$`Pr(>F)`[2]
}
hist(my_pvalues)
omnibus_pvalues <- c()
contrast_pvalues <- c()
for(i in 1:1000){
IV <- factor(rep(1:4,each=20))
DV <- c(rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1),rnorm(20,0,1))
sim_data <- tibble(IV,DV)
c1 <- c(3, -1, -1, -1)
contrasts(sim_data$IV)
aov.out <- aov(DV~IV, sim_data)
save_results <- summary.aov(aov.out, split = list(IV=list("c1" = 1)))
omnibus_pvalues[i] <- save_results[[1]]$`Pr(>F)`[1]
contrast_pvalues[i] <- save_results[[1]]$`Pr(>F)`[2]
}
length(omnibus_pvalues[omnibus_pvalues < .05])/1000
length(omnibus_pvalues[omnibus_pvalues < .05])/1000
length(omnibus_pvalues[omnibus_pvalues < .05])/1000
length(omnibus_pvalues[omnibus_pvalues < .05])/1000
length(contrast_pvalues[contrast_pvalues < .05])/1000
knitr::opts_chunk$set(echo = TRUE)
pwr.r.test(n=10,
r=.2,
sig.level=.05,
alternative="two.sided")
install.packages("pwr")
library(pwr)
pwr.r.test(n=10,
r=.2,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=200,
r=.2,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=100,
r=.2,
sig.level=.05,
alternative="two.sided")
install.packages("pwr")
library(pwr)
pwr.r.test(n=100,
r=.5,
sig.level=.05,
alternative="two.sided")
install.packages("pwr")
pwr.r.test(n=100,
r=.5,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=100,
r=.8,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=100,
r=.2,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=75,
r=.2,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=75,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=75,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=75,
r=.1,
sig.level=.05)
pwr.r.test(n=75,
r=.1,
sig.level=.05)
pwr.r.test(n=75,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=100,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=150,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=125,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=127,
r=.1,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=127,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=75,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=50,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=45,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=40,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=42,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=43,
r=.3,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=43,
r=.5,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=40,
r=.5,
sig.level=.05,
alternative="two.sided")
pwr.r.test(n=30,
r=.5,
sig.level=.05,
alternative="two.sided")
knitr::opts_chunk$set(echo = TRUE)
#tribble
library(tibble)
bat_hat_data <- tribble(~Subject, ~Phonological_Similarity, ~Age, ~num_correct,
"s1", "b1", "a1", 15,
"s2", "b1", "a1", 23,
"s3", "b1", "a1", 12,
"s4", "b1", "a1", 16,
"s5", "b1", "a1", 14,
"s1", "b2", "a1", 13,
"s2", "b2", "a1", 19,
"s3", "b2", "a1", 10,
"s4", "b2", "a1", 16,
"s5", "b2", "a1", 12,
"s6", "b1", "a2", 39,
"s7", "b1", "a2", 31,
"s8", "b1", "a2", 40,
"s9", "b1", "a2", 32,
"s10", "b1", "a2", 38,
"s6", "b2", "a2", 29,
"s7", "b2", "a2", 15,
"s8", "b2", "a2", 30,
"s9", "b2", "a2", 26,
"s10", "b2", "a2", 30
)
View(bat_hat_data)
aov_out <- aov(num_correct ~ Phonological_Similarity*Age + Error(Subject/Phonologiacl_Similarity), data = bat_hat_data)
aov_out <- aov(num_correct ~ Phonological_Similarity*Age + Error(Subject/Phonological_Similarity), data = bat_hat_data)
summary(aov_out)
subjects <- c()
Phonological_Similarity <- c()
Age <- c()
num_correct <- c()
bat_hat_data <- tibble(subjects,
Phonological_Similarity,
Age,
num_correct)
num_correct <- c(15,23,12,16,14,
13,19,10,16,12,
39,31,40,32,38,
29,15,30,26,30)
num_correct <- c(15,23,12,16,14,
13,19,10,16,12,
39,31,40,32,38,
29,15,30,26,30)
bat_hat_data <- tibble(subjects,
Phonological_Similarity,
Age,
num_correct)
subjects <- c(rep(c("s1","s2","s3","s4","s5"),2),
rep(c("s6","s7","s8","s9","s10"),2))
Phonological_Similarity <- rep(rep(c("b1","b2"),each = 5),2)
Age <- rep(c("a1","a2"),each=10)
num_correct <- c(15,23,12,16,14,
13,19,10,16,12,
39,31,40,32,38,
29,15,30,26,30)
bat_hat_data <- tibble(subjects,
Phonological_Similarity,
Age,
num_correct)
summary(aov_out)
summary <- summary(aov_out)
View(summary)
subject <- c()
Typicality_B <-c()
Faces_A <- c()
centiseconds <- c()
face_data <- tibble(subject,
Typicality_B,
Faces_A,
centiseconds)
subject <- rep(c("s1","s2","s3","s4"),each=10)
centiseconds <- c(20,22,25,24,19,37,43,48,45,
9,8,21,21,21,34,35,35,37,39,
18,20,18,21,33,35,39,37,40,
5,14,16,22,23,38,49,51,50,52)
Typicality_B <-rep(rep(c("b1","b2"),each=5),4)
subject <- rep(c("s1","s2","s3","s4"),each=10)
Typicality_B <-rep(rep(c("b1","b2"),each=5),4)
Faces_A <- rep(c("a1","a2","a3","a4","a5"),8)
centiseconds <- c(20,22,25,24,19,37,43,48,45,
9,8,21,21,21,34,35,35,37,39,
18,20,18,21,33,35,39,37,40,
5,14,16,22,23,38,49,51,50,52)
face_data <- tibble(subject,
Typicality_B,
Faces_A,
centiseconds)
centiseconds <- c(20,22,25,24,19,37,37,43,48,45,
9,8,21,21,21,34,35,35,37,39,
18,20,18,21,33,35,39,39,37,40,
5,14,16,22,23,38,49,51,50,52)
face_data <- tibble(subject,
Typicality_B,
Faces_A,
centiseconds)
View(face_data)
aov_out <- aov(centiseconds ~ IV, data = face_data)
aov_out <- aov(centiseconds ~ (Subject +
Faces_A%in%Typicality_B +
Typicality_B +
Typicality_B:Subject),
data = face_data)
Subject <- rep(c("s1","s2","s3","s4"),each=10)
aov_out <- aov(centiseconds ~ (Subject +
Faces_A%in%Typicality_B +
Typicality_B +
Typicality_B:Subject),
data = face_data)
summary(aov_out)
Subject <- rep(c("s1","s2","s3","s4"),each=10)
Typicality_B <-rep(rep(c("b1","b2"),each=5),4)
Faces_A <- rep(c("a1","a2","a3","a4","a5"),8)
centiseconds <- c(20,22,25,24,19,37,37,43,48,45,
9,8,21,21,21,34,35,35,37,39,
18,20,18,21,33,35,39,39,37,40,
5,14,16,22,23,38,49,51,50,52)
face_data <- tibble(subject,
Typicality_B,
Faces_A,
centiseconds)
aov_out <- aov(centiseconds ~ (Subject +
Faces_A%in%Typicality_B +
Typicality_B +
Typicality_B:Subject),
data = face_data)
summary(aov_out)
